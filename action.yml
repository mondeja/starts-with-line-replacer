name: Starts with line replacer
description: Replaces lines in a file that start with a specific string.
inputs:
  working-directory:
    description: 'The working directory. Defaults to "." (current folder).'
    required: false
    default: '.'
  file:
    description: 'The file to check for lines starting with a specific string.'
    required: true
  starts-with:
    description: 'The string that lines should start with to be replaced.'
    required: true
  replace-by:
    description: 'The string to replace lines that start with the specified string.'
    required: true

runs:
  using: composite
  steps:
    - name: Get version
      id: get-version
      shell: bash
      working-directory: ${{ inputs.working-directory }}
      env:
        FILE: ${{ inputs.file }}
      run: |
        # Ensure the arguments are provided
        if [[ -z "$FILE" ]]; then
          echo "Error: 'file' input is required." >&2
          exit 1
        fi
        if [[ -z "${{ inputs.starts-with }}" ]]; then
          echo "Error: 'starts-with' input is required." >&2
          exit 1
        fi
        if [[ -z "${{ inputs.replace-by }}" ]]; then
          echo "Error: 'replace-by' input is required." >&2
          exit 1
        fi

        # Ensure the file exists
        if [[ ! -f "$FILE" ]]; then
          echo "Error: File '$FILE' does not exist." >&2
          exit 1
        fi
      
        # Ensure a line starts with the specified string
        if ! grep -q '^${{ inputs.starts-with }}' "$FILE"; then
          echo "Error: No lines start with the specified 'starts-with' string." >&2
          exit 1
        fi

        # Replace lines that start with the specified string
        #
        # On darwin, sed requires the -i option to be followed by an empty string,
        # but this is not accepted by GNU sed.
        if [[ "$OSTYPE" == "darwin"* ]]; then
          sed_i_option='-i ""'
        else
          sed_i_option='-i'
        fi
        sed $sed_i_option 's/^${{ inputs.starts-with }}.*/${{ inputs.replace-by }}/' "$FILE"
